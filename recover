#!/bin/bash

# Uncomment to use valgrind
#export VALGRIND="valgrind --trace-children=yes --leak-check=full"

# Uncomment to do IO counting
#export IO_COUNT='LD_PRELOAD=$WD/io_count.so'

# Uncomment to enable patchgroup traces during recovery
#PG_TRACE="PATCHGROUP_TRACE=sysj.pgt"

# Uncomment to use Featherstitch journal mode
#JOURNAL=use_journal=1

if [ -h fstitch ]
then
	FSTYPE="ext2"
else
	FSTYPE="ext3"
	[ "$PG_TRACE" -o "$JOURNAL" ] && echo "Warning: ignoring Featherstitch-specific option (not using Featherstitch)"
fi

make || exit $?

HOST="`hostname`"
if [ "${HOST#kudos-}" == "$HOST" -a "$HOST" != "execl" -a "$HOST" != "butters" ]
then
	echo "Not running on a kudos-* test machine, won't overwrite your file systems."
	exit 1
fi

if mount | grep -q "on /mnt/test"
then
	echo "/mnt/test is mounted; unmount before running this script."
	exit 1
fi

if [ "$FSTYPE" == "ext2" ]
then
	if [ ! "$JOURNAL" ]
	then
		# Soft updates mode; use fsck
		sudo e2fsck -f /dev/sdb1
		sync
	fi
	
	echo -n "Loading Featherstitch... "
	sudo insmod fstitch/kfstitchd.ko device=/dev/sdb $JOURNAL
	[ -f /proc/kfstitchd_debug ] && (cat /proc/kfstitchd_debug > try.fdb &) || rm -f try.fdb
	sudo mount /mnt/test
	echo "done."
else
	sudo mount /dev/sdb1 /mnt/test -t $FSTYPE
fi


# Filter the system journal
find /mnt/test -type f -print0 | xargs -0 ls -l
true | (WD="`pwd`"; cd /mnt/test; ulimit -c unlimited; eval $IO_COUNT $PG_TRACE exec $VALGRIND '"$WD/toilet"')
find /mnt/test -type f -print0 | xargs -0 ls -l

sudo umount /mnt/test
if [ "$FSTYPE" == "ext2" ]
then
	echo "Unloading Featherstitch..."
	time sudo rmmod kfstitchd
fi

echo -ne \\007

sudo mount /dev/sdb1 /mnt/test -t $FSTYPE
rm -f gmon.out* gmon.sum*
if [ -f /mnt/test/gmon.out ]
then
	echo -n "Processing gprof data... "
	cp /mnt/test/gmon.out* .
	for gmon in gmon.out*
	do
		gprof main $gmon > ${gmon/out/sum}
	done
	echo "done."
fi
for pgt in /mnt/test/*.pgt
do
	[ "$pgt" == "/mnt/test/*.pgt" ] && break
	echo "Patchgroup trace: `basename "$pgt"`"
	cp "$pgt" .
done
if [ -f /mnt/test/core ]
then
	echo "Starting debugger on core."
	gdb -c /mnt/test/core main
fi
sudo umount /mnt/test
