#!/bin/bash

# If -pg is used here, be sure to run toilet only once below, probably not with valgrind
CFLAGS="-ggdb" make || exit $?

# Uncomment to use valgrind
#export VALGRIND="valgrind --trace-children=yes --leak-check=full"

# Uncomment to enable patchgroup traces on the tests
#PERF_TRACE="PATCHGROUP_TRACE=perf.pgt"
#TEST_TRACE="PATCHGROUP_TRACE=test.pgt"
#DEMO_TRACE="PATCHGROUP_TRACE=demo.pgt"
#HAND_TRACE="PATCHGROUP_TRACE=hand.pgt"
#SYSJ_TRACE="PATCHGROUP_TRACE=sysj.pgt"

# Uncomment to use Featherstitch journal mode
#JOURNAL=use_journal=1

HOST="`hostname`"
if [ "${HOST#kudos-}" == "$HOST" -a "$HOST" != "execl" ]
then
	echo "Not running on a kudos-* test machine, won't overwrite your file systems."
	exit 1
fi

if mount | grep -q "on /mnt/test"
then
	echo "/mnt/test is mounted; unmount before running this script."
	exit 1
fi

echo -n "Creating file system... "
sudo mke2fs -m 0 -b 4096 /dev/sdb1 &> /dev/null
sudo mount /dev/sdb1 /mnt/test -t ext2
sudo chown `whoami` /mnt/test
[ "$JOURNAL" ] && dd if=/dev/zero of=/mnt/test/.journal bs=1M count=64 2> /dev/null
cp demo /mnt/test
cat > /mnt/test/tests << EOF
tx
dtable
ctable
stable
blob_cmp
EOF
mkdir /mnt/test/journals
sudo umount /mnt/test
echo "done."

echo -n "Loading Featherstitch... "
sudo insmod fstitch/kfstitchd.ko device=/dev/sdb $JOURNAL
[ -f /proc/kfstitchd_debug ] && (cat /proc/kfstitchd_debug > try.fdb &) || rm -f try.fdb
sudo mount /mnt/test
echo "done."

# Run the performance test
echo "performance" | (WD="`pwd`"; cd /mnt/test; ulimit -c unlimited; eval $PERF_TRACE exec $VALGRIND '"$WD/toilet"')
ls -lR /mnt/test

if [ ! -f /mnt/test/core -a ! -f /mnt/test/gmon.out ]
then
	# Run some tests
	#echo "script tests" | (WD="`pwd`"; cd /mnt/test; ulimit -c unlimited; eval $TEST_TRACE exec $VALGRIND '"$WD/toilet"')
	#ls -lR /mnt/test
	
	# Run the old demo
	#echo "script demo" | (WD="`pwd`"; cd /mnt/test; ulimit -c unlimited; eval $DEMO_TRACE exec $VALGRIND '"$WD/toilet"')
	#ls -lR /mnt/test
	
	# Allow custom commands
	#(WD="`pwd`"; cd /mnt/test; ulimit -c unlimited; eval $HAND_TRACE exec $VALGRIND '"$WD/toilet"')
	#ls -lR /mnt/test
	
	# Filter the system journal
	true | (WD="`pwd`"; cd /mnt/test; ulimit -c unlimited; eval $SYSJ_TRACE exec $VALGRIND '"$WD/toilet"')
	ls -l /mnt/test/sys_journal*
	
	# If we comment out all the commands above, we
	# need something here so bash doesn't complain
	true
fi

echo "Unloading Featherstitch..."
sudo umount /mnt/test
time sudo rmmod kfstitchd

echo -ne \\007

sudo mount /dev/sdb1 /mnt/test -t ext2
if [ -f /mnt/test/core ]
then
	echo "Starting debugger on core."
	gdb -c /mnt/test/core main
fi
if [ -f /mnt/test/gmon.out ]
then
	cp /mnt/test/gmon.out .
	gprof main gmon.out > gmon.sum
else
	rm -f gmon.out gmon.sum
fi
for pgt in /mnt/test/*.pgt
do
	[ "$pgt" == "/mnt/test/*.pgt" ] && break
	echo "Patchgroup trace: `basename "$pgt"`"
	cp "$pgt" .
done
sudo umount /mnt/test
